name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/user/signup
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: 'Registers a new user with the provided information and returns a success response upon successful registration.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: "User's first name."
        required: false
        example: John
        type: required
        enumValues: []
        custom: []
      last_name:
        name: last_name
        description: "User's last name."
        required: false
        example: Doe
        type: required
        enumValues: []
        custom: []
      email:
        name: email
        description: "User's email address."
        required: true
        example: user@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: "User's password."
        required: true
        example: mypassword
        type: string
        enumValues: []
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      first_name: John
      last_name: Doe
      email: user@example.com
      password: mypassword
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status_code": 201,
              "status": "success",
              "message": "User signed up successfully",
              "data": {
                  "id": 1,
                  "first_name": "John",
                  "last_name": "Doe",
                  "email": "user@example.com",
                  "is_admin": true,
                  "password_hash": "$2y$10$..."
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/user/signin
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login.'
      description: 'Authenticates a user by validating their email and password and provides an access token upon success.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "User's email address."
        required: true
        example: alfredo.reynolds@example.net
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: "User's password."
        required: true
        example: 'DIv)odSpa}DOAzmdln+'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: alfredo.reynolds@example.net
      password: 'DIv)odSpa}DOAzmdln+'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User authenticated successfully",
              "statusCode": 200,
              "data": {
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI...",
                  "email": "user@example.com",
                  "id": 1,
                  "isAdmin": false,
                  "org_id": 123
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "status_code": 401,
              "status": "error",
              "message": "Authentication failed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": {
                  "email": ["The email field is required."],
                  "password": ["The password field is required."]
              },
              "statusCode": 422
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
